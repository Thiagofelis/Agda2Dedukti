symbol {|TYPE__Σ|} : (a : univ.Lvl) → (b : univ.Lvl) → (A : Agda.Term (Agda.set (univ.s a)) (Agda.code (Agda.set a))) → (B : Agda.Term (Agda.set (univ.max a (univ.s b))) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) A (λ _0 , Agda.code (Agda.set b)))) → TYPE;
symbol {|Σ|} : Agda.Term Agda.sortOmega (Agda.qLevel (λ a , Agda.sortOmega) (λ a , Agda.qLevel (λ b , Agda.set (univ.max (univ.s a) (univ.s b))) (λ b , Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max (univ.s a) (univ.s b))) (Agda.code (Agda.set a)) (λ A , Agda.prod (Agda.set (univ.max a (univ.s b))) (Agda.set (univ.max (univ.s a) (univ.s b))) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) A (λ _0 , Agda.code (Agda.set b))) (λ B , Agda.code (Agda.set (univ.max a b)))))));
rule Agda.Term _ ({|Σ|} $a $b $A $B) ↪ {|TYPE__Σ|} $a $b $A (λ _0 , $B (Agda.etaExpand $a $A _0));
symbol {|Σ__fst|} : Agda.Term Agda.sortOmega (Agda.qLevel (λ a , Agda.sortOmega) (λ a , Agda.qLevel (λ b , Agda.set (univ.max (univ.s a) (univ.s b))) (λ b , Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max a (univ.s b))) (Agda.code (Agda.set a)) (λ A , Agda.prod (Agda.set (univ.max a (univ.s b))) (Agda.set (univ.max a b)) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) A (λ _0 , Agda.code (Agda.set b))) (λ B , Agda.proj_prod (Agda.set (univ.max a b)) (Agda.set a) ({|Σ|} a b A (λ _0 , B (Agda.etaExpand a A _0))) (λ r , A))))));
symbol {|Σ__snd|} : Agda.Term Agda.sortOmega (Agda.qLevel (λ a , Agda.sortOmega) (λ a , Agda.qLevel (λ b , Agda.set (univ.max (univ.s a) (univ.s b))) (λ b , Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max a (univ.s b))) (Agda.code (Agda.set a)) (λ A , Agda.prod (Agda.set (univ.max a (univ.s b))) (Agda.set (univ.max a b)) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) A (λ _0 , Agda.code (Agda.set b))) (λ B , Agda.proj_prod (Agda.set (univ.max a b)) (Agda.set b) ({|Σ|} a b A (λ _0 , B (Agda.etaExpand a A _0))) (λ r , B (Agda.etaExpand a A ({|Σ__fst|} a b A (λ _0 , B (Agda.etaExpand a A _0)) r))))))));
symbol {|Σ___,_|} : Agda.Term Agda.sortOmega (Agda.qLevel (λ a , Agda.sortOmega) (λ a , Agda.qLevel (λ b , Agda.set (univ.max (univ.s a) (univ.s b))) (λ b , Agda.prod (Agda.set (univ.s a)) (Agda.set (univ.max a (univ.s b))) (Agda.code (Agda.set a)) (λ A , Agda.prod (Agda.set (univ.max a (univ.s b))) (Agda.set (univ.max a b)) (Agda.prod (Agda.set a) (Agda.set (univ.s b)) A (λ _0 , Agda.code (Agda.set b))) (λ B , Agda.prod (Agda.set a) (Agda.set (univ.max a b)) A (λ fst , Agda.prod (Agda.set b) (Agda.set (univ.max a b)) (B (Agda.etaExpand a A fst)) (λ snd , {|Σ|} a b A (λ _0 , B (Agda.etaExpand a A _0)))))))));
rule Agda.etaExpand _ ({|Σ|} $a $b $A $B) $y ↪ {|Σ___,_|} $a $b $A (λ _0 , $B (Agda.etaExpand $a $A _0)) (Agda.etaExpand a $A ({|Σ__fst|} $a $b $A (λ _0 , $B (Agda.etaExpand $a $A _0)) $y)) (Agda.etaExpand b ($B (Agda.etaExpand a $A ({|Σ__fst|} $a $b $A (λ _0 , $B (Agda.etaExpand $a $A _0)) $y))) ({|Σ__snd|} $a $b $A (λ _0 , $B (Agda.etaExpand $a $A _0)) $y));
rule {|Σ__fst|} $a $b $A $B ({|Σ___,_|} a b A {λ _0 , B (Agda.etaExpand a A _0)} $fst $snd) ↪ Agda.etaExpand a $A $fst;
rule {|Σ__snd|} $a $b $A $B ({|Σ___,_|} a b A {λ _0 , B (Agda.etaExpand a A _0)} $fst $snd) ↪ Agda.etaExpand b ($B (Agda.etaExpand a $A $fst)) $snd;
